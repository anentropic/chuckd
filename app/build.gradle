plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.mikeneck.graalvm-native-image' version 'v1.3.0'
    id "net.thauvin.erik.gradle.semver" version "1.0.4"
}

repositories {
    mavenCentral()
    maven { url 'https://packages.confluent.io/maven/' }
    maven { url 'https://jitpack.io' }  // needed by org.everit.json.schema-1.12.2 transient dep
}

dependencies {
    testImplementation 'junit:junit:4.13.1'

//    implementation 'org.apache.logging.log4j:log4j-core:2.7'
    implementation 'io.confluent:kafka-schema-registry-parent:6.1.1'
    implementation 'io.confluent:kafka-schema-registry:6.1.1'
    implementation 'io.confluent:kafka-schema-registry-client:6.1.1'
    implementation 'io.confluent:kafka-serde-tools-package:6.1.1'
    implementation 'io.confluent:kafka-schema-serializer:6.1.1'
    implementation 'io.confluent:kafka-json-schema-serializer:6.1.1'
    implementation 'io.confluent:kafka-json-schema-provider:6.1.1'
    implementation 'info.picocli:picocli:4.6.1'
    annotationProcessor 'info.picocli:picocli-codegen:4.6.1'
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

application {
    mainClass = 'com.anentropic.chuckd.ChuckD'
}

/*
 * Provides gradle tasks to update the version file
 * - gradle incrementPatch
 * - gradle incrementMinor
 * - gradle incrementMajor
 * - gradle -Dversion.semver=1.0.0-beta
 */
semver {
    properties = "src/main/resources/version.properties"
}

/*
 * these parts all prescribed by:
 * https://github.com/mike-neck/graalvm-native-image-plugin
 */
nativeImage {
    graalVmHome = System.getProperty('java.home')
    mainClass = 'com.anentropic.chuckd.ChuckD'
    executableName = 'chuckd'
    outputDirectory = file("$buildDir/bin")
    arguments {
        add '-H:ReflectionConfigurationFiles=src/main/resources/reflection.json'
        add '--no-fallback'
        add '--enable-all-security-services'
//        add '--report-unsupported-elements-at-runtime'
        if (project.hasProperty("static") && project.getProperty("static")) {
            // Error: DARWIN does not support building static executable images.
            add '--static'
        }
        // Suppress compile-time error: io.netty.util.internal.logging.Log4J2Logger
        // (I guess not used at runtime currently)
        add '--allow-incomplete-classpath'
    }
}
generateNativeImageConfig {
    enabled = true
    byRunningApplication {
        stdIn("""
    |total: 2
    |contents:
    |  - name: foo
    |    size: 2052
    |""".stripMargin())
    }
    byRunningApplicationWithoutArguments()
    byRunningApplication {
        arguments('-h')
    }
}
